/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define DEF_L 0
#define NUM_L 1
#define SYM_L 2

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt {
    quick_tap_ms = <200>;
};

/ {
    chosen {
      zmk,matrix_transform = &five_column_transform;
    };

    behaviors {
        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_backtick {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp GRAVE>;
        };
        combo_esc {
            timeout-ms = <50>;
            key-positions = <1 11>;
            bindings = <&kp ESC>;
        };
        combo_backspace {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp BSPC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <12 13>;
            bindings = <&kp TAB>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <22 23>;
            bindings = <&kp ENTER>;
        };
        combo_minus {
            timeout-ms = <50>;
            key-positions = <7 8>;
            bindings = <&kp MINUS>;
        };
        combo_backslash {
            timeout-ms = <50>;
            key-positions = <8 9>;
            bindings = <&kp BACKSLASH>;
        };
        combo_less_than {
            timeout-ms = <50>;
            key-positions = <15 16>;
            bindings = <&kp LT>;
        };
        combo_greater_than {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp GT>;
        };
        combo_colon {
            timeout-ms = <50>;
            key-positions = <16 17>;
            bindings = <&kp COLON>;
        };
        combo_quote {
            timeout-ms = <50>;
            key-positions = <25 26>;
            bindings = <&kp APOSTROPHE>;
        };
        combo_underscore {
            timeout-ms = <50>;
            key-positions = <26 27>;
            bindings = <&kp UNDER>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "Base";
            bindings = <
                &kp Q      &kp W      &kp E       &kp R           &kp T        &kp Y            &kp U          &kp I       &kp O         &kp P
                &as LCTL A &kp S      &kp D       &kp F           &kp G        &kp H            &as LGUI J     &kp K       &kp L         &as RCTL SEMI
                &as LALT Z &kp X      &kp C       &kp V           &kp B        &kp N            &kp M          &kp COMMA   &kp DOT       &kp SLASH
                           &none      &mo NUM_L   &kp LSHIFT                                    &kp SPACE      &mo SYM_L   &none
            >;
        };

        num_layer {
            display-name = "Num";
            bindings = <
                &kp N1     &kp N2     &kp N3      &kp N4          &kp N5        &kp N6          &kp N7         &kp N8      &kp N9        &kp N0
                &none      &none      &kp LG(E)   &kp LG(R)       &none         &none           &kp N4         &kp N5      &kp N6        &kp COLON
                &kp F1     &kp F2     &kp F12     &kp F4          &kp F5        &none           &kp N1         &kp N2      &kp N3        &kp DOT
                           &none      &none       &none                                         &none          &kp N0      &kp DOT
            >;
        };

        sym_layer {
            display-name = "Sym";
            bindings = <
                &kp EXCL   &kp AT     &kp HASH    &kp DLLR        &kp PRCNT     &kp CARET       &kp AMPS       &kp ASTRK   &kp PLUS      &kp EQUAL
                &kp COLON  &none      &kp LPAR    &kp RPAR        &none         &kp LEFT        &kp DOWN       &kp UP      &kp RIGHT     &none
                &none      &kp LBRC   &kp LBKT    &kp RBKT        &kp RBRC      &kp HOME        &kp PG_DN      &kp PG_UP   &kp END       &none
                           &none      &none       &none                                         &none          &none       &none
            >;
        };
    };
};
